# -*- coding: utf-8 -*-
"""api.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_vvePPVuXHIon25W71PD4kt1Z5J2sKgh
"""

!pip install fastapi

!pip install uvicorn

# Save your API as a script file
with open("api.py", "w") as f:
    f.write("""
from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from typing import List, Dict, Any
import joblib
from utils import mask_pii
import re
from nltk.corpus import stopwords
from nltk.stem import WordNetLemmatizer
import nltk

nltk.download('stopwords')
nltk.download('wordnet')

model = joblib.load('/content/rf_classifier.pkl')
vectorizer = joblib.load('/content/vectorizer.pkl')
label_encoder = joblib.load('/content/label_encoder.pkl')

stop_words = set(stopwords.words('english'))
lemmatizer = WordNetLemmatizer()

app = FastAPI(title="Email Classification API with PII Masking")

class EmailRequest(BaseModel):
    email_body: str

class EmailResponse(BaseModel):
    masked_email: str
    predicted_category: str
    pii_entities: List[Dict[str, Any]]

def clean_text(text):
    text = re.sub(r'\\n|\\r', ' ', text)
    text = re.sub(r'Subject:', '', text)
    text = text.lower()
    text = re.sub(r'[^a-z\\s]', '', text)
    text = re.sub(r'\\s+', ' ', text)
    tokens = text.split()
    tokens = [lemmatizer.lemmatize(word) for word in tokens if word not in stop_words]
    return ' '.join(tokens)

def classify_email(text: str):
    cleaned = clean_text(text)
    vec = vectorizer.transform([cleaned])
    pred = model.predict(vec)
    return label_encoder.inverse_transform(pred)[0]

@app.get("/")
def read_root():
    return {"message": "Email Classification API is running."}

@app.post("/predict", response_model=EmailResponse)
def predict(request: EmailRequest):
    if not request.email_body.strip():
        raise HTTPException(status_code=400, detail="Email body is required.")
    masked_text, pii_entities = mask_pii(request.email_body)
    predicted_category = classify_email(masked_text)
    return EmailResponse(
        masked_email=masked_text,
        predicted_category=predicted_category,
        pii_entities=pii_entities
    )
""")

!pip install pyngrok

!ngrok config add-authtoken 2vw7qikeq4cBlG5FBBmeDLSQGwb_68RoznbcLNwKXpq6mjTPt

import uvicorn
from pyngrok import ngrok
import nest_asyncio
nest_asyncio.apply()

public_url = ngrok.connect(8000)
print("Public URL:", public_url)

uvicorn.run("api:app", host="0.0.0.0", port=8000)

